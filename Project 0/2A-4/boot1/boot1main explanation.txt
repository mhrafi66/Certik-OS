
Section: 2A
Group no: 4
Student ID:
160041066
160041047
160041077


TASK1:

int i;
    uint32_t bootable_lba=0;
    for (i = 0; i < 4; i++)
	{
		if ( mbr->partition[i].bootable == BOOTABLE_PARTITION)
		{
			bootable_lba = mbr->partition[i].first_lba;
			break;
		}
	}

	if (i == 4)
		panic ("Cannot find bootable partition!");
		
Here we are finding the bootable partition of memory through searching. Bootable partition is stored in bootable_lba and if there is not found any 
partition then using panic,error message is printed.
		
		
TASK 2:


	 putline("Loading Kernel.......");
    uint32_t entry_id= load_kernel(bootable_lba);

    putline("Executing Kernel.......");

    exec_kernel(entry_id, &mboot_info);
	
	////we are getting entry id from load kernel function that is parameter for executing kernel
	then we are calling executing kernel////